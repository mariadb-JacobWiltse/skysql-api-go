
name: Publish
on:
  push:
    branches:
      - main
      - next
  workflow_dispatch:
jobs:
  pipeline-container:
    name: Build devcontainer for pipeline
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to github container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inject slug variables into env
        uses: rlespinasse/github-slug-action@v3.x

      - id: image
        name: Define image name and tag
        shell: bash
        run: echo "::set-output name=image::ghcr.io/${{ github.repository_owner }}/skysql-api-go-builds:${{ env.GITHUB_REF_SLUG }}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: .devcontainer/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.image.outputs.image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        shell: bash
        run: echo ${{ steps.docker_build.outputs.digest }}

  release:
    name: Publish new release
    runs-on: ubuntu-latest
    needs: [pipeline-container]
    container:
      image: ${{needs.pipeline-container.outputs.image}}
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
        with: # https://stackoverflow.com/a/65081720
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: "0"
      - name: Configure git
        run: |
          git config --global user.email "no-reply@mariadb.com"
          git config --global user.name "SkySQL API Golang SDK Release Pipeline"
      - name: Autogenerate next sdk
        if: github.ref == 'refs/heads/next'
        run: |
          make all
          git add .
          git commit -m "Regenerate SDK based on api v`jq -r .info.version openapi.json`"
          git push origin next
      - name: Publish new version
        run: GH_TOKEN="${{ secrets.GITHUB_TOKEN }}" auto shipit
      - id: version
        name: Output new version
        run: echo "::set-output name=version::$(git describe --tags)"
